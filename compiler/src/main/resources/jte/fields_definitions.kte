<%--
    Copyright (C) 2024 The Qt Company Ltd.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied
    See the License for the specific language governing permissions and
    limitations under the License.
--%>
@import io.github.landerlyoung.jenny.element.field.JennyVarElement
@import io.github.landerlyoung.jenny.utils.toJniReturnTypeString
@import io.github.landerlyoung.jenny.utils.needWrapLocalRef
@import io.github.landerlyoung.jenny.utils.print
@import io.github.landerlyoung.jenny.utils.toJniCall
@import io.github.landerlyoung.jenny.utils.isStatic
@import io.github.landerlyoung.jenny.utils.toCamelCase
@import io.github.landerlyoung.jenny.utils.ParametersProvider
@import io.github.landerlyoung.jenny.element.model.type.JennyKind
@import io.github.landerlyoung.jenny.utils.JennyNameProvider


@param useJniHelper:Boolean
@param fields:Collection<JennyVarElement>
@param hasGetter:(JennyVarElement)->Boolean
@param hasSetter:(JennyVarElement)->Boolean
@param parametersProvider: ParametersProvider
@for((index, field)  in fields.withIndex())
    !{val fieldId = JennyNameProvider.getElementName(field,index) }
    !{val jniComment = "// field: ${field.modifiers.print()} ${field.type.typeName} ${field.name}"}
    !{val comment = if(!useJniHelper)jniComment  else "    // for jni helper\n    $jniComment"}
    @if(hasGetter(field))
        @template.field_getter(field = field, fieldId = fieldId, parametersProvider = parametersProvider, useJniHelper = useJniHelper, comment = comment)
    @endif
    @if(hasSetter(field))
        @template.field_setter(field = field, fieldId = fieldId, parametersProvider = parametersProvider, useJniHelper = useJniHelper, comment = comment)
    @endif
@endfor